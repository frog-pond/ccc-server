import {get, ONE_DAY} from '@frogpond/ccc-lib'
import mem from 'mem'
import _jsdom from 'jsdom'
import moment from 'moment'
const {JSDOM} = _jsdom

const archiveBase =
	'https://apps.carleton.edu/events/convocations/feeds/media_files?page_id=342645'

function processConvo(event) {
	let title = JSDOM.fragment(
		event.querySelector('title').textContent,
	).textContent.trim()

	let description = event.querySelector('description')
	description = description
		? JSDOM.fragment(
				event.querySelector('description').textContent,
		  ).textContent.trim()
		: ''

	let pubDate = moment(event.querySelector('pubDate').textContent)

	let enclosure = event.querySelector('enclosure')
	enclosure = enclosure
		? {
				type: enclosure.getAttribute('type')
					? enclosure.getAttribute('type')
					: '',
				url: enclosure.getAttribute('url') ? enclosure.getAttribute('url') : '',
				length: enclosure.getAttribute('length')
					? enclosure.getAttribute('length')
					: '',
		  }
		: null

	return {title, description, pubDate, enclosure}
}

async function _getArchived() {
	let resp = await get(archiveBase)
	let dom = new JSDOM(resp.body, {contentType: 'text/xml'})
	let convos = Array.from(
		dom.window.document.querySelectorAll('rss channel item'),
	).map(processConvo)
	convos = convos.slice(0, 100)
	return Promise.all(convos)
}

export const getArchived = mem(_getArchived, {maxAge: ONE_DAY})

export async function archived(ctx) {
	ctx.body = await getArchived()
}
