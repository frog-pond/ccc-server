import {get} from '../http'
import {ONE_MINUTE} from '../cache'
import moment from 'moment'

function convertReasonEvents(data, now = moment()) {
	let events = data.map(event => {
		const startTime = moment(event.datetime)
		const endTime = startTime
			.clone()
			.add(event.hours, 'hours')
			.add(event.minutes, 'minutes')

		return {
			startTime,
			endTime,
			title: event.name || '',
			description: event.description || '',
			location: event.location || '',
			isOngoing: startTime.isBefore(now, 'day') && endTime.isSameOrAfter(now),
			metadata: {
				reasonId: event.id,
			},
			config: {
				startTime: true,
				endTime: true,
				subtitle: 'location',
			},
		}
	})

	return events.slice(0, 50)
}

export async function getReasonCalendar(calendarUrl, now=Date.now()) {
	let dateParams = {
		// eslint-disable-next-line camelcase
		start_date: now.clone().format('YYYY-MM-DD'),
		// eslint-disable-next-line camelcase
		end_date: now
			.clone()
			.add(1, 'month')
			.format('YYYY-MM-DD'),
	}

	let params = Object.assign(
		{},
		dateParams,
		{format: 'json'},
	)

	let resp = await get(ONE_MINUTE)(calendarUrl, {json: true, query: params})

	return convertReasonEvents(resp.body)
}
