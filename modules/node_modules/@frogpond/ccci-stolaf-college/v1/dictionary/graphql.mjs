import {getDictionary} from './index'

export const Term = `
	"""
	Term
	"""
	type Term {
		term: String
		definition: String
	}
`

export const QueryExtension = `
	extend type Query {
		dictionary: [Term!]
		dictionarySearch(query: String!): [Term!]
	}
`

export const typeDefs = [QueryExtension, Term]

const renameWordToTerm = pair => ({term: pair.word, definition: pair.definition})

export const resolvers = {
	dictionary: () => getDictionary().then(results => results.data.map(renameWordToTerm)),
	dictionarySearch: (root, args) => {
		let query = args.query.toLowerCase()
		return getDictionary().then(results => results.data.map(renameWordToTerm).filter(({term}) => term.toLowerCase().includes(query)))
	},
}
