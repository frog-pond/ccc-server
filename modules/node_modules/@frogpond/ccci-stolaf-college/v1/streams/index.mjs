import {get, ONE_DAY} from '@frogpond/ccc-lib'
import mem from 'mem'
import moment from 'moment'

const GET = mem(get, {maxAge: ONE_DAY})

export async function getStreams(streamClass, dateFrom, dateTo) {
	let params = {
		class: streamClass,
		sort: 'ascending',
		// eslint-disable-next-line camelcase
		date_from: dateFrom,
		// eslint-disable-next-line camelcase
		date_to: dateTo,
	}

	let url = 'https://www.stolaf.edu/multimedia/api/collection'
	const data = await GET(url, {json: true, query: params}).then(
		resp => resp.body,
	)
	return data
}

export async function upcoming(ctx) {
	const {to} = ctx.query
	const dateFrom = moment().format('YYYY-MM-DD')
	const dateToDefault = moment()
		.add(2, 'month')
		.format('YYYY-MM-DD')

	const dateToSelected = moment(to).format('YYYY-MM-DD')
	const dateTo = to ? dateToSelected : dateToDefault

	ctx.body = await getStreams('current', dateFrom, dateTo)
}

export async function archived(ctx) {
	const {from} = ctx.query
	const dateTo = moment().format('YYYY-MM-DD')
	const dateFromDefault = moment()
		.subtract(2, 'month')
		.format('YYYY-MM-DD')

	const dateFromSelected = moment(from).format('YYYY-MM-DD')
	const dateFrom = from ? dateFromSelected : dateFromDefault

	ctx.body = await getStreams('archived', dateFrom, dateTo)
}
