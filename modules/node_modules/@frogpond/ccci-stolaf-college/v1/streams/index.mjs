import {get, ONE_DAY} from '@frogpond/ccc-lib'
import mem from 'mem'
import moment from 'moment'

const GET = mem(get, {maxAge: ONE_DAY})

export async function getStreams(streamClass, sort, dateFrom, dateTo) {
	let params = {
		class: streamClass,
		sort: sort,
		// eslint-disable-next-line camelcase
		date_from: dateFrom,
		// eslint-disable-next-line camelcase
		date_to: dateTo,
	}

	let url = 'https://www.stolaf.edu/multimedia/api/collection'
	const data = await GET(url, {json: true, query: params}).then(
		resp => resp.body,
	)
	return data
}

export async function upcoming(ctx) {
	// eslint-disable-next-line camelcase
	const {date_from, date_to, sort} = ctx.query

	const dateFromDefault = moment().format('YYYY-MM-DD')
	const dateToDefault = moment()
		.add(2, 'month')
		.format('YYYY-MM-DD')

	// eslint-disable-next-line camelcase
	const dateFrom = date_from || dateFromDefault
	// eslint-disable-next-line camelcase
	const dateTo = date_to || dateToDefault
	const sortBy = sort || 'ascending'
	const streamClass = 'current'

	ctx.body = await getStreams(streamClass, sortBy, dateFrom, dateTo)
}

export async function archived(ctx) {
	// eslint-disable-next-line camelcase
	const {date_from, date_to, sort} = ctx.query

	const dateToDefault = moment().format('YYYY-MM-DD')
	const dateFromDefault = moment()
		.subtract(2, 'month')
		.format('YYYY-MM-DD')

	// eslint-disable-next-line camelcase
	const dateFrom = date_from || dateFromDefault
	// eslint-disable-next-line camelcase
	const dateTo = date_to || dateToDefault
	const sortBy = sort || 'ascending'
	const streamClass = 'archived'

	ctx.body = await getStreams(streamClass, sortBy, dateFrom, dateTo)
}
