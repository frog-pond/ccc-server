{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig to read more about this file */

    /* Projects */
    "incremental": true, /* Save .tsbuildinfo files to allow for incremental compilation of projects. */
    "tsBuildInfoFile": "./.tsbuildinfo", /* Specify the path to .tsbuildinfo incremental compilation file. */

    /* Language and Environment */
    "target": "ESNext", /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
     "lib": ["ESNext"], /* Specify a set of bundled library declaration files that describe the target runtime environment. */

    /* Modules */
    "module": "ESNext", /* Specify what module code is generated. */
    "rootDir": "./", /* Specify the root folder within your source files. */

    /* JavaScript Support */
    "allowJs": true, /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */
    // "checkJs": true, /* Enable error reporting in type-checked JavaScript files. */

    /* Emit */
    "sourceMap": true, /* Create source map files for emitted JavaScript files. */
    "outDir": "./dist", /* Specify an output folder for all emitted files. */

    /* Interop Constraints */
    "isolatedModules": true, /* Ensure that each file can be safely transpiled without relying on other imports. */
    "verbatimModuleSyntax": true, /* Do not transform or elide any imports or exports not marked as type-only, ensuring they are written in the output file's format based on the 'module' setting. */
    "allowSyntheticDefaultImports": true, /* Allow 'import x from y' when a module doesn't have a default export. */
    "esModuleInterop": true, /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true, /* Ensure that casing is correct in imports. */

    /* Type Checking */
    "strict": true, /* Enable all strict type-checking options. */
    "exactOptionalPropertyTypes": true, /* Interpret optional property types as written, rather than adding 'undefined'. */
    "noImplicitReturns": true, /* Enable error reporting for code paths that do not explicitly return in a function. */
    "noFallthroughCasesInSwitch": true, /* Enable error reporting for fallthrough cases in switch statements. */
    "noUncheckedIndexedAccess": true, /* Add 'undefined' to a type when accessed using an index. */
    "noImplicitOverride": true, /* Ensure overriding members in derived classes are marked with an override modifier. */
    "noPropertyAccessFromIndexSignature": true, /* Enforces using indexed accessors for keys declared using an indexed type. */
    "allowUnusedLabels": false, /* Raise compiler errors for unused labels. */

    /* Completeness */
    "skipLibCheck": true, /* Skip type checking all .d.ts files. */
  }
}
