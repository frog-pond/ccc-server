---
version: 2

x-config:
  - &name "frog-pond/ccc-server"
  - &defaults
    docker:
      - image: docker.io/circleci/node:10.0.0
    environment: &default-environment
      LOCAL_NAME: *name
      DEST_NAME: docker.io/frog-pond/ccc-server
  - &caches
    - &cache-load-docker
      keys:
        - docker--{{ arch }}-{{ .Branch }}-{{ .Revision }}
        - docker--{{ arch }}-{{ .Branch }}
        - docker--{{ arch }}
    - &cache-save-docker
      key: docker--{{ arch }}-{{ .Branch }}-{{ .Revision }}
      paths:
        - /tmp/image.tar.gz
    - &cmd-docker-load
      name: 'Load from cache if possible'
      command: |
        if test -r /tmp/image.tar.gz; then
          echo "Loading from /tmp/image.tar.gz"
          docker load -qi /tmp/image.tar.gz
        else
          echo "missing /tmp/image.tar.gz; failing the build"
          exit 1
        fi
    - &cmd-docker-save
      name: 'Dump image to cachable .tar.gz file'
      command: docker save "$LOCAL_NAME:$CIRCLE_SHA1" | pigz -9c > /tmp/image.tar.gz

workflows:
  version: 2
  on_commit:
    jobs:
      - build
      - lint
      - test
      - deploy-docker:
          requires: [lint, test, build]
          context: docker-hub

  on_tag:
    jobs:
      - build:
          filters: &filters
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - lint:
          filters: *filters
      - test:
          filters: *filters
      - deploy-docker:
          requires: [lint, test, build]
          filters: *filters
          context: docker-hub

  cron_weekly:
    jobs:
      - build
      - lint
      - test
    triggers:
      - schedule:
          # only run Monday morning at 12:00am
          cron: 0 0 * * 1
          filters:
            branches:
              only: [master]

jobs:
  # build the docker image
  build:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: List docker images
          command: docker images -a
      - run:
          name: Build docker image
          command: docker build --cache-from="$(docker images -a -q)" -t "$LOCAL_NAME:$CIRCLE_SHA1" .
      - run: sudo apt install -y pigz
      - run: *cmd-docker-save
      - save_cache: *cache-save-docker

  # run sanity checks
  lint:
    <<: *defaults
    steps:
      - checkout
      - run: npm install
      - run: npm run lint
      - run: npm run pretty-check

  # test the server-side js code
  test:
    <<: *defaults
    steps:
      - checkout
      - run: npm install
      - run: npm test

  # deploy the docker images to Docker Hub
  deploy-docker:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache: *cache-load-docker
      - run: *cmd-docker-load
      - run: docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
      - run:
          name: Push to Docker Hub
          command: |
            image_id="$(docker images -q "$LOCAL_NAME:$CIRCLE_SHA1")"
            echo "image_id: $image_id"

            if [ -z $image_id ]; then
              echo "could not find docker image to load; exiting"
              exit 1
            fi

            echo "CIRCLE_BRANCH: $CIRCLE_BRANCH" "CIRCLE_TAG: $CIRCLE_TAG"
            if [[ $CIRCLE_BRANCH = master ]]; then
              docker_tag="$DEST_NAME:HEAD"
            elif [[ $CIRCLE_TAG ]]; then
              docker_tag="$DEST_NAME:$CIRCLE_TAG"
            elif [[ $CIRCLE_BRANCH ]]; then
              docker_tag="$DEST_NAME:$CIRCLE_BRANCH"
            fi
            echo "docker_tag: $docker_tag"

            docker tag "$image_id" "$docker_tag"
            docker push "$docker_tag"

            if [[ $CIRCLE_TAG ]]; then
              docker tag "$image_id" "$DEST_NAME:latest"
              docker push "$DEST_NAME:latest"
            fi
